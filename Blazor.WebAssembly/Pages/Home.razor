@page "/"
@inject NavigationManager Navigation

<PageTitle>Home</PageTitle>

@if (mostrarMensaje)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        ¡Inicio de sesión exitoso!
        <button type="button" class="btn-close" @onclick="OcultarMensaje"></button>
    </div>
}

<AuthorizeView>
    <Authorized>
        <h1>Bienvenido, @context.User.Identity?.Name</h1>
        <p>Selecciona una opción del menú para comenzar.</p>
        <div class="mt-3">
            <a href="/productos" class="btn btn-primary">Ver Productos</a>
            @if (context.User.IsInRole("Admin"))
            {
                <a href="/usuarios" class="btn btn-primary ms-2">Ver Usuarios</a>
                <a href="/pedidos" class="btn btn-primary ms-2">Ver Pedidos</a>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <h1>Bienvenido</h1>
        <p>Por favor <a href="/login">inicia sesión</a> para continuar.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [SupplyParameterFromQuery]
    public bool loginSuccess { get; set; }

    private bool mostrarMensaje = false;

    protected override async Task OnInitializedAsync()
    {
        if (loginSuccess)
        {
            mostrarMensaje = true;

            // Limpiar la URL inmediatamente
            Navigation.NavigateTo("/", replace: true);

            // Ocultar el mensaje después de 3 segundos
            await Task.Delay(3000);
            mostrarMensaje = false;
            StateHasChanged();
        }
    }

    private void OcultarMensaje()
    {
        mostrarMensaje = false;
    }
}